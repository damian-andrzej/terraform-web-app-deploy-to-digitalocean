name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Deploy DigitalOcean Droplet
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Initialize Terraform
        env:
         AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.ACCESS_KEY_SECRET }}
        run: |
          terraform init \
            -backend-config="access_key=$AWS_ACCESS_KEY_ID" \
            -backend-config="secret_key=$AWS_SECRET_ACCESS_KEY"

      - name: validate terraform
        env:
          TF_VAR_ssh_fingerprint: ${{ secrets.SSH }}
        run: terraform validate
        working-directory: ./

      - name: Plan terraform
        env:
          TF_VAR_do_token: ${{ secrets.TOKEN }}
          TF_VAR_ssh_fingerprint: ${{ secrets.SSH }}
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ACCESS_KEY_SECRET }}
        run: terraform apply -auto-approve
        working-directory: ./

      - name: Show droplet IP
        run: terraform output droplet_ip

  ansible:
    runs-on: ubuntu-latest
    needs: terraform  # Ensure the droplet is provisioned before running Ansibl

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Ansible
    - name: Set up Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible

    # Set up SSH keys
    - name: Set up SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Add droplet SSH key to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
        ssh-keyscan -H 164.92.232.193 >> ~/.ssh/known_hosts

        chmod 644 ~/.ssh/known_hosts

    # Run Ansible Playbook on the new droplet
    - name: Run Ansible Playbook
      run: |
        ansible-playbook -i "${{ secrets.DROPLET_IP }},164.92.232.193," --private-key ~/.ssh/id_rsa --user root ansible/application-config.yml

  test:
    name: Verify App Deployment
    runs-on: ubuntu-latest
    needs: ansible  # This ensures the droplet + app are ready

    steps:
      - name: Install curl & SSH client
        run: sudo apt update && sudo apt install -y curl openssh-client

      - name: Add droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Check Docker Running
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.DROPLET_IP }} "docker ps"
